# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  lint:
    docker:
      - image: circleci/golang:1.11
    steps:
      - checkout
      - run: go get -u golang.org/x/lint/golint
      - run: golint ./...
      - run: go vet ./...

  test:
    docker:
      - image: circleci/golang:1.11-node
        environment:
          GO_ENV: testing
      - image: circleci/postgres:10-alpine
        environment:
          POSTGRES_USER: peregrine
          POSTGRES_DB: peregrine
    steps:
      - checkout
      - run: go get -v -t -d ./...
      - run: go test -v ./...
      - run: go build -o migrate cmd/migrate/main.go
      - run: go build -o peregrine cmd/peregrine/main.go
      - run: ./migrate -up
      - run: ./migrate -up -migrationsTable seedmigrations -migrationsPath seed-migrations
      - run:
          command: ./peregrine
          background: true
      - run: cd api-tests && npm i
      - run: while ! nc -z localhost 8080; do sleep 0.1; done
      - run: cd api-tests && npm test

  deploy_edge:
    docker:
      - image: circleci/golang:1.11
    steps:
      - checkout
      - run: go get -v -t -d ./...
      - run: mkdir -p /tmp/builds
      - run: go build -o /tmp/builds/peregrine cmd/peregrine/main.go
      - run: go build -o /tmp/builds/migrate cmd/migrate/main.go
      - run: mkdir -p /tmp/deploy/bin
      - run: mkdir -p /tmp/deploy/migrations
      - run: cp -r /tmp/builds/* /tmp/deploy/bin
      - run: cp -r migrations/* /tmp/deploy/migrations
      - run: tar czvf deploy.tgz -C /tmp/ deploy
      - run: scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null deploy.tgz $EDGE_SSH_USER@$EDGE_SSH_HOST:/root
      - run: ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -t $EDGE_SSH_USER@$EDGE_SSH_HOST "./deploy.sh"

  deploy_prod:
    docker:
      - image: circleci/golang:1.11
    steps:
      - checkout
      - run: go get -v -t -d ./...
      - run: mkdir -p /tmp/builds
      - run: go build -o /tmp/builds/peregrine cmd/peregrine/main.go
      - run: go build -o /tmp/builds/migrate cmd/migrate/main.go
      - run: mkdir -p /tmp/deploy/bin
      - run: mkdir -p /tmp/deploy/migrations
      - run: cp -r /tmp/builds/* /tmp/deploy/bin
      - run: cp -r migrations/* /tmp/deploy/migrations
      - run: tar czvf deploy.tgz -C /tmp/ deploy
      - run: scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null deploy.tgz $PROD_SSH_USER@$PROD_SSH_HOST:/root
      - run: ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -t $PROD_SSH_USER@$PROD_SSH_HOST "./deploy.sh"

workflows:
  version: 2
  test_n_deploy:
    jobs:
      - lint
      - test
      - deploy_prod:
          requires:
            - lint
            - test
          filters:
            branches:
              only: master
      - deploy_edge:
          requires:
            - lint
            - test
          filters:
            branches:
              only: develop
